1.0发布，简单封装下阿里的直播播放器，因为没有直播地址，所以不好做测试，播放普通的视频没问题

1.1发布，处理下默认的ui图片,处理下进度条的颜色，可以复写color文件改变颜色

1.2 发布,播放的时候判断下url为空就啥也不做,增加全屏，正常播放状态切换的时候的监听，好自己处理点东西。
    在未设置url地址的时候默认不显示中间的播放按钮,设置地址的时候增加一个参数，可以处理直播的时候是否显示进度条以及时间

1.3发布，增加是否支持屏幕旋转[点击播放按钮才开启旋转]，增加手势控制音量和屏幕亮度,并增加一个toast的图形显示亮度和音量的变化

1.4 发布老版本开始播放后如果开启的自动旋转，那么就无法控制了，如果这时候上层add一个fragment，自动旋转会导致视频跑上来，
    autoRotateScreen用来设置是否支持旋转，，setAutoRotateEnable用来动态更改支持状态,
1.5 发布 增加handleTouch的boolean值，可以用来设置是否支持触摸改变声音，亮度 ，默认不支持。播放错误的时候显示背景图。

1.6 发布，增加播放错误的时候详细的错误提示
1.7 发布，播放器reset的时候判断下是否有url。没有的话中间的播放按钮不显示
1.8 发布，把一些默认的提示文字改为string里边，方便复写,添加超时时间，不过貌似那设置是无效的。看文档默认是15秒，其实是30秒，不太靠谱的ali
    视频状态为preparing的时候增加定时器，15秒后如果还是preparing状态，则判定为播放错误。
1.9 不知道为啥1.8的不能下载所以上传个1.9的。
2.0 2.1通过随时修改url地址改变播放按钮的显示，处理直播结束后状态的切换。

2.2增加wifi状态切换权限，否则可能会挂掉,修改播放结束的显示ui

2.3 未发布，为了处理音频播放，缺少状态，所以手动处理状态，将aliplayer的playstate字段改为共有，可以随意更改。
这样如果是音频的话，监听到prepared就把状态改为playing，如下在回调中处理，回调以前只有播放器状态，这次两个状态都返回，可以自己做一些处理。
@Override
            public void playerState(int playerState,int playState) {
                System.out.println("playerState================="+playState);
                if(playState==AliVideoPlayer.STATE_PREPARED){
                    aliVideoPlayer2.getmController().findViewById(R.id.image).setVisibility(View.VISIBLE);
                    aliVideoPlayer2.mCurrentState=AliVideoPlayer.STATE_PLAYING;
                    aliVideoPlayer2.getmController().setControllerState(AliVideoPlayer.PLAYER_NORMAL,AliVideoPlayer.STATE_PLAYING);
                }
            }


未发布，左右滑动支持进度条功能

terminal里运行命令gradle bintray 就可以了，如果成功，你就在bintray网站上看到自己的了